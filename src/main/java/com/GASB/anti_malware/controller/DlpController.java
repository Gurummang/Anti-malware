package com.GASB.anti_malware.controller;

import com.GASB.anti_malware.annotation.JWT.ValidateJWT;
import com.GASB.anti_malware.model.dto.request.DlpPolicyRequest;
import com.GASB.anti_malware.model.dto.request.DlpRequestDto;
import com.GASB.anti_malware.model.dto.response.DlpPolicyResp;
import com.GASB.anti_malware.model.dto.response.Result;
import com.GASB.anti_malware.model.entity.Policy;
import com.GASB.anti_malware.repository.org.AdminRepo;
import com.GASB.anti_malware.service.dlp.DlpPolicyService;
import com.GASB.anti_malware.service.dlp.DlpService;
import jakarta.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.NoSuchElementException;

@RestController
@RequestMapping("/api/v1/dlp")
public class DlpController {

    private final DlpService dlpService;
    private final DlpPolicyService dlpPolicyService;
    private final AdminRepo adminRepo;

    @Autowired
    public DlpController(DlpService dlpService, DlpPolicyService dlpPolicyService, AdminRepo adminRepo) {
        this.dlpService = dlpService;
        this.dlpPolicyService = dlpPolicyService;
        this.adminRepo = adminRepo;
    }

    @PostMapping("/mq")
    public void dlpMQ(@RequestBody DlpRequestDto dlpRequestDto) throws Exception {
        Long fileId = dlpRequestDto.getFileId();
        dlpService.dlpFunc(fileId);
    }

    // Policy CRUD
    @PostMapping("/policy/make")
    public List<DlpPolicyResp> setPolicy(@RequestBody DlpPolicyRequest dlpPolicyRequest) {
        return dlpPolicyService.setPolicy(dlpPolicyRequest);
    }

    @PostMapping("/policy/delete")
    public List<DlpPolicyResp> deletePolicy(@RequestBody DlpPolicyRequest dlpPolicyRequest) {
        return dlpPolicyService.deletePolicy(dlpPolicyRequest);
    }

    @GetMapping("/policy/list")
    @ValidateJWT
    public List<DlpPolicyResp> getPolicyList(HttpServletRequest servletRequest) {
        String errorMessage = (String) servletRequest.getAttribute("error");
        if (errorMessage != null) {
            return dlpPolicyService.getPolicyList(null, errorMessage, null);
        }

        try {
            String email = (String) servletRequest.getAttribute("email");
            long orgId = adminRepo.findByEmail(email)
                    .orElseThrow(() -> new NoSuchElementException("Admin not found with email: " + email))
                    .getOrg()
                    .getId();
            return dlpPolicyService.getPolicyList(orgId, null, null);
        } catch (Exception e) {
            return dlpPolicyService.getPolicyList(null, null, e.getMessage());
        }
    }
}