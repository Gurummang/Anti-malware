package com.GASB.anti_malware.controller;

import com.GASB.anti_malware.controller.dto.ResponseDto;
import com.GASB.anti_malware.controller.dto.VtReportDto;
import com.GASB.anti_malware.service.VtReportSaveService;
import com.GASB.anti_malware.domain.VtReport;
import com.GASB.anti_malware.service.VtReportReturnService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/v1/vt")
public class VirusTotalController {

    private final VtReportReturnService vtReportReturnService;
    private final VtReportSaveService vtReportSaveService;

    @Autowired
    public VirusTotalController(VtReportReturnService vtReportReturnService,
                                VtReportSaveService vtReportSaveService) {
        this.vtReportReturnService = vtReportReturnService;
        this.vtReportSaveService = vtReportSaveService;
    }

    // storedfile id로 조회하여 hash를 받아 report 받아온 후, db에 저장함
    @PostMapping("/report/{file_id}")
    public ResponseEntity<ResponseDto<String>> saveReport(@PathVariable long file_id) {
        String hash = vtReportSaveService.getHashByFileId(file_id);
        if (hash == null) {
            throw new IllegalArgumentException("Hash value cannot be null for file id: " + file_id);
        }

        String result = vtReportSaveService.getReport(hash);
        if (result.startsWith("Error")) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(ResponseDto.ofFail(file_id, result));
            // report가 존재하지 않는 경우. 프론트에 단순히 존재하지 않는다고 보내줘야 하나?
        } else {
            return ResponseEntity.ok(ResponseDto.ofSuccess(file_id, result));
        }
    }

    // vt_report 테이블에 저장되어 있는 값을 가져옴
    // vt_status가 1인 경우에만 프론트에 반환되어야 할 것
    @GetMapping("/report/{file_id}")
    public ResponseEntity<ResponseDto<VtReportDto>> getReport(@PathVariable long file_id) {
        try {
            VtReport report = vtReportReturnService.getReportById(file_id);
            if (report == null) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND)
                        .body(ResponseDto.ofFail(file_id, "Report not found."));
            }

            VtReportDto reportDto = vtReportReturnService.convertToDto(report);
            return ResponseEntity.ok(ResponseDto.ofSuccess(file_id, reportDto));

        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(ResponseDto.ofFail(file_id, e.getMessage()));
        }
    }
}
