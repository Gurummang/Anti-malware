package com.GASB.anti_malware.service;

import com.GASB.anti_malware.config.RabbitMQProperties;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

// 해당 프로세스의 시작점
@Service
public class FileEventListenerService {

    private static final Logger logger = LoggerFactory.getLogger(FileEventListenerService.class);

    private final RabbitTemplate rabbitTemplate;
    private final FileStatusService fileStatusService;
    private final RabbitMQProperties properties;

    public FileEventListenerService(RabbitTemplate rabbitTemplate, FileStatusService fileStatusService, RabbitMQProperties properties) {
        this.rabbitTemplate = rabbitTemplate;
        this.fileStatusService = fileStatusService;
        this.properties = properties;
    }

    @RabbitListener(queues = "#{@rabbitMQProperties.fileQueue}")
    public void executeFileTask(long fileId) {
        try {
            logger.info("Processing file with ID: " + fileId);

            fileStatusService.createFileStatus(fileId);

            // 메시지를 다른 큐로 전송
            rabbitTemplate.convertAndSend(properties.getExchange(), properties.getVtReportRoutingKey(), fileId);
            rabbitTemplate.convertAndSend(properties.getExchange(), properties.getGrmScanRoutingKey(), fileId);

        } catch (Exception e) {
            logger.error("Error processing file with ID: " + fileId, e);
        }
    }
}


