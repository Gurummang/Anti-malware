package com.GASB.anti_malware.service.dlp;

import org.apache.poi.hwpf.HWPFDocument;
import org.apache.poi.hwpf.extractor.WordExtractor;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.*;
import org.apache.tika.Tika;
import org.springframework.stereotype.Service;
import lombok.extern.slf4j.Slf4j;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

@Service
@Slf4j
public class DlpService {

    public void extractText(String filePath) {
        File file = new File(filePath);
        String mimeType = getMimeType(file);

        if (mimeType == null) {
            log.error("Could not determine MIME type for file: " + filePath);
            return;
        }

        try{
            switch (mimeType) {
                case "application/msword":
                    extractTextFromDoc(file);
                    break;
                case "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
                    extractTextFromDocx(file);
                    break;
                default:
                    log.error("Unsupported MIME type: " + mimeType);
                    break;
            }
        } catch(Exception e) {
            log.error("Failed to extract text from file: " + filePath, e);
        }
    }

    private String getMimeType(File file) {
        Tika tika  = new Tika();
        try {
            return tika.detect(file);
        } catch (IOException e) {
            log.error("Can not detect mimetype", e);
            return null;
        }
    }

    private void extractTextFromDocx(File file) throws IOException {
        try (FileInputStream fis = new FileInputStream(file); XWPFDocument document = new XWPFDocument(fis)) {
            XWPFWordExtractor extractor = new XWPFWordExtractor(document);
            String text = extractor.getText();
            System.out.println("파일 내용: " + text);
        }
    }

    private void extractTextFromDoc(File file) throws IOException {
        try (FileInputStream fis = new FileInputStream(file); HWPFDocument document = new HWPFDocument(fis)) {
            WordExtractor extractor = new WordExtractor(document);
            String text = extractor.getText();
            System.out.println("파일 내용: " + text);
        } catch (IOException e) {
            log.error("Failed to read the file: " + file.getAbsolutePath(), e);
        } catch (NullPointerException e) {
            log.error("Null pointer exception encountered while processing the file: " + file.getAbsolutePath(), e);
        } catch (Exception e) {
            log.error("Unexpected error occurred while processing the file: " + file.getAbsolutePath(), e);
        }
    }

}
