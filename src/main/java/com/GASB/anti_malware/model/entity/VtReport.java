package com.GASB.anti_malware.model.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@Entity
public class VtReport {

        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private long id;

        @JsonIgnore
        @OneToOne
        @JoinColumn(name = "file_id", referencedColumnName = "id")
        private StoredFile storedFile;

        private String type;
        private String v3;
        private String alyac;
        private String kaspersky;
        private String falcon;
        private String avast;
        private String sentinelone;

        private int detectEngine;
        private int completeEngine;
        private int score;
        private String threatLabel;

        @Column(columnDefinition = "TEXT", nullable = false)
        private String reportUrl;

        @Builder
        public VtReport(StoredFile storedFile, String type, String v3, String alyac, String kaspersky,
                                String falcon, String avast, String sentinelone, int detectEngine,
                                int completeEngine, int score, String threatLabel, String reportUrl) {
            this.storedFile = storedFile;
            this.type = type;
            this.v3 = v3;
            this.alyac = alyac;
            this.kaspersky = kaspersky;
            this.falcon = falcon;
            this.avast = avast;
            this.sentinelone = sentinelone;
            this.detectEngine = detectEngine;
            this.completeEngine = completeEngine;
            this.score = score;
            this.threatLabel = threatLabel;
            this.reportUrl = reportUrl;
        }

        // Copy constructor
        public VtReport(VtReport other) {
            this.id = other.id;
            this.type = other.type;
            this.v3 = other.v3;
            this.alyac = other.alyac;
            this.kaspersky = other.kaspersky;
            this.falcon = other.falcon;
            this.avast = other.avast;
            this.sentinelone = other.sentinelone;
            this.detectEngine = other.detectEngine;
            this.completeEngine = other.completeEngine;
            this.score = other.score;
            this.threatLabel = other.threatLabel;
            this.reportUrl = other.reportUrl;
            // Deep copy of associated StoredFile if necessary
            this.storedFile = other.storedFile != null ? new StoredFile(other.storedFile) : null;
        }

        // Safe setter for mutable storedFile
        public void setStoredFile(StoredFile storedFile) {
            this.storedFile = storedFile != null ? new StoredFile(storedFile) : null; // Store a copy
        }

        public StoredFile getStoredFile() {
            return storedFile != null ? new StoredFile(storedFile) : null; // Return a copy
        }
}


